/*
 * StationPaneel.java
 *
 * Created on 22 november 2007, 12:35
 */

package gui;


/**
 *
 * @author  Fabian van den IJssel
 */
public class StationPaneel extends javax.swing.JPanel {
    //Array Stations per station 1 = aantal reizigers, 2 = gem wachtijd in sec. 3 = grootstewachtijd
    int[][] stations = new int[9][4];
    
    
    /** Creates new form StationPaneel */
    public StationPaneel() {
        initComponents();
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents

        jScrollPane1 = new javax.swing.JScrollPane();
        tblStations = new javax.swing.JTable();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Stations", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 10))); // NOI18N
        setMaximumSize(new java.awt.Dimension(883, 173));
        setPreferredSize(new java.awt.Dimension(0, 0));
        setLayout(new java.awt.BorderLayout());

        tblStations.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        tblStations.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Station 1", "0", "00:00:00", "00:00:00"},
                {"Station 2", "0", "00:00:00", "00:00:00"},
                {"Station 3", "0", "00:00:00", "00:00:00"},
                {"Station 4", "0", "00:00:00", "00:00:00"},
                {"Station 5", "0", "00:00:00", "00:00:00"},
                {"Station 6", "0", "00:00:00", "00:00:00"},
                {"Station 7", "0", "00:00:00", "00:00:00"},
                {"Station 8", "0", "00:00:00", "00:00:00"}
            },
            new String [] {
                "Stationnummer", "Aantal wachtend", "Gemiddelde wachttijd", "Maximale wachttijd"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblStations);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable tblStations;
    // End of variables declaration//GEN-END:variables
    
    
    /**
    * Berekent en update de statistieken van het stationspaneel
    */
        public void updateStatistieken() {
            
         try{   
            for( int i = 0; i < gui.GUIMain.pnlReiziger.tblReizigers.getRowCount() ; i++) {
                int wachtTimestamp = 0;
                
                String wachtTijd = (String) gui.GUIMain.pnlReiziger.tblReizigers.getValueAt(i, 3);
                if(wachtTijd.compareTo("00:00:00") > 0 && wachtTijd.length() == 8){
                    wachtTimestamp = (((Integer.valueOf(wachtTijd.substring(0, 2)).intValue()) * 3600) + ((Integer.valueOf(wachtTijd.substring(3, 5))).intValue() * 60) + (Integer.valueOf(wachtTijd.substring(6, 8)).intValue()));
                }
                else{
                    continue;
                }
                String station = (String) gui.GUIMain.pnlReiziger.tblReizigers.getValueAt(i, 1);
                int stationnr = Integer.valueOf(station.substring((station.length()-1), station.length())).intValue();
                               
                stations[stationnr][2] = (((stations[stationnr][2] * stations[stationnr][1]) + wachtTimestamp)/ ++stations[stationnr][1]);
                stations[stationnr][1] = stations[stationnr][1]++;
                if(wachtTimestamp > stations[stationnr][3]){
                    stations[stationnr][3] = wachtTimestamp;
                }
            }
               
               for(int s = 1; s<=8; s++){
                    tblStations.setValueAt(stations[s][1], (s-1),1);
                    tblStations.setValueAt(GUIMain.tijdNaarString(stations[s][2], false)[0], (s-1),2);
                    tblStations.setValueAt(GUIMain.tijdNaarString(stations[s][3], false)[0], (s-1),3);
                    stations[s][1] = 0;
                    stations[s][2] = 0;
                    stations[s][3] = 0;
               }
                
         }
         catch(Exception e){
             
         }
        }
}