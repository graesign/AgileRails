/*
 * ReizigerPaneel.java
 *
 * Created on 22 november 2007, 12:35
 */

package gui;

import javax.swing.*;
import javax.swing.table.*;


/**
 *
 * @author  Raymond van der Rots & Fabian van den IJssel
 */
public class ReizigerPaneel extends javax.swing.JPanel{
    int tijd;
    /**
     * Creates new form ReizigerPaneel
     */
    public ReizigerPaneel() {
        initComponents();  
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents

        jScrollPane1 = new javax.swing.JScrollPane();
        tblReizigers = new javax.swing.JTable();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Reizigers", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 10))); // NOI18N

        jScrollPane1.setFocusable(false);

        tblReizigers.setAutoCreateRowSorter(true);
        tblReizigers.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        tblReizigers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Vertrekpunt", "Eindpunt", "Wachttijd", "Vertrektijd", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblReizigers);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 599, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
        );
    }//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable tblReizigers;
    // End of variables declaration//GEN-END:variables
    
    public DefaultTableModel getModel() {
        return (DefaultTableModel) this.tblReizigers.getModel();
    }
    
    /**
    * Berekent en update de statistieken van het reizigerspaneel
    */
    public void updateStatistieken() {
     try{   
        //Update de wachtijd als dit van toepassing is
        for( int i = 0; i < tblReizigers.getRowCount() ; i++) {
                String vertrTijd = (String) tblReizigers.getValueAt(i, 4);
                int vertrekTijd = (((new Integer(vertrTijd.substring(0, 2))) * 3600) + ((new Integer(vertrTijd.substring(3, 5))) * 60));
                // Staat de reiziger al op het station?
                if((vertrekTijd-10) > tijd) {
                    tblReizigers.setValueAt("00:00:00", i,3);
                    tblReizigers.setValueAt("niet op station", i, 5);
                }else{

                if(tblReizigers.getValueAt(i, 5).equals("niet op station")) {
                        tblReizigers.setValueAt("Wacht op trein", i, 5);
                }else{
                
                if(tblReizigers.getValueAt(i, 5).equals("Wacht op trein")){
                                tblReizigers.setValueAt(GUIMain.tijdNaarString(tijd - vertrekTijd, false)[0], i,3);
                }else{
                
                if(tblReizigers.getValueAt(i, 5).equals("Onderweg naar bestemming")){
                    tblReizigers.setValueAt("00:00:00", i,3);
                }
                }}}
        }
     }
     catch(Exception e){
        //Niet klagen maar doorgaan
     }
    }

    /**
    * Zoekt een tabelregel bij de opgegeven reiziger
    * @param reizigernr het nummer van de gezochte reiziger
    * @return de tabelregel van de gezochte reiziger
    */
   private int findReizgerRow(int reizigernr){
       try{ 
          for(int i = 0; i <= tblReizigers.getRowCount(); i++){
                if((Integer)tblReizigers.getValueAt(i, 0) == reizigernr){
                 //System.out.println("Reiznr gevonden" + i);
                 return i;
               }
         }
       }
        catch(Exception e){
           return -1;
        }
       return -1; 
    }
    
   /**
    * Veranterd de status van de reizger
    * @param id het nummer van de reiziger
    * @param status de nieuwe status van de reiziger
    */
    public void setReizigerStatus(int id, int status) {
        switch (status) {
            case 0:  
                //Reiziger vertrekt naar bestemming
                tblReizigers.setValueAt("Onderweg naar bestemming",  findReizgerRow(id), 5);
            break;
            case 1:  
                //Reiziger is aangekomen, verwijder uit de tabel
                int rownr = findReizgerRow(id);
                getModel().removeRow(rownr);
            break;
            default: System.out.println("Reizigersupdate: Invalid Status:"+status);break;
        }
    }
    
    /**
    * Update de lokale tijdsvariabele
    */
    public void setTijd(int tijd) {
        this.tijd = tijd;
    }
}
