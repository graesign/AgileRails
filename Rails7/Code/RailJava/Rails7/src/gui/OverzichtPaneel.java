/*
 * OverzichtPaneel.java
 *
 * Created on 22 november 2007, 12:35
 */

package gui;
import javax.swing.DefaultListModel;
import javax.swing.SwingUtilities;

/**
 *
 * @author  Fabian van den IJssel
 */
public class OverzichtPaneel extends javax.swing.JPanel implements Runnable{
    public static javax.swing.DefaultListModel actieslijst = new DefaultListModel();
            
            
    /** Creates new form OverzichtPaneel */
    public OverzichtPaneel() {
        initComponents();
        voegActieToe("Simulatie geladen; druk op \"Start\" om de simulatie te starten");
        lblLangsteWachtijd.setText("00:00:00");
        
    }
    
    
    
    /**
    * Deze functie update om de beurt alle statistieken vensters
    */
    public void run() {
        
        while(true) {
            updateStatistieken();
            gui.GUIMain.pnlReiziger.updateStatistieken();
            gui.GUIMain.pnlStation.updateStatistieken();
         }
    }
    
    /**
    * Deze functie voegt een actie toe aan het "recente acties" lijstje
    * @param actie de actie (string) die toegevoegd moet worden
    */
     public static void voegActieToe(String actie){
        //Voeg de recente actie toe aan de lijst
         actieslijst.add((actieslijst.getSize()) , "[" + gui.GUIMain.tijdNaarString(railcab.Timer.getTijd(), false)[0] + "] " + actie);
        
         //Scroll altijd naar beneden in de actielijst
        SwingUtilities.invokeLater(new Runnable() {
	public void run() {
            scrollpaneActies.getVerticalScrollBar().setValue((scrollpaneActies.getVerticalScrollBar().getMaximum()));
	}
    });
       
     }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents

        jLabel1 = new javax.swing.JLabel();
        lblLangsteWachtijd = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblGemiddeldeWachtijd = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        lblGemiddeldeBezetting = new javax.swing.JLabel();
        lblMaximaleBezetting = new javax.swing.JLabel();
        scrollpaneActies = new javax.swing.JScrollPane();
        lstActies = new javax.swing.JList();
        lblActies = new javax.swing.JLabel();
        lblHuidigeStatistieken = new javax.swing.JLabel();
        lblAantalReizigersTitel = new javax.swing.JLabel();
        lblAantalReizigers = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Overzicht", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 10))); // NOI18N
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 10));
        jLabel1.setText("Gemiddelde wachttijd:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        lblLangsteWachtijd.setFont(new java.awt.Font("Tahoma", 0, 10));
        lblLangsteWachtijd.setText("lblLangsteWachtijd");
        add(lblLangsteWachtijd, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 10));
        jLabel4.setText("Langste wachttijd:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        lblGemiddeldeWachtijd.setFont(new java.awt.Font("Tahoma", 0, 10));
        lblGemiddeldeWachtijd.setText("lblGemiddeldeWachtijd");
        add(lblGemiddeldeWachtijd, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, -1, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 10));
        jLabel13.setText("Gemiddelde Bezetting:");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 10));
        jLabel14.setText("Maximale bezetting:");
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));
        add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        lblGemiddeldeBezetting.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        lblGemiddeldeBezetting.setText("lblGemiddeldeBezetting");
        add(lblGemiddeldeBezetting, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, -1, -1));

        lblMaximaleBezetting.setFont(new java.awt.Font("Tahoma", 0, 10));
        lblMaximaleBezetting.setText("lblMaximaleBezetting");
        add(lblMaximaleBezetting, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, -1, -1));

        lstActies.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        lstActies.setModel(actieslijst);
        scrollpaneActies.setViewportView(lstActies);

        add(scrollpaneActies, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 40, 580, -1));

        lblActies.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lblActies.setText("Recente acties:");
        add(lblActies, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, -1, -1));

        lblHuidigeStatistieken.setFont(new java.awt.Font("Tahoma", 1, 10));
        lblHuidigeStatistieken.setText("Huidige statistieken:");
        add(lblHuidigeStatistieken, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        lblAantalReizigersTitel.setFont(new java.awt.Font("Tahoma", 0, 10));
        lblAantalReizigersTitel.setText("Aantal reizigers:");
        add(lblAantalReizigersTitel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        lblAantalReizigers.setFont(new java.awt.Font("Tahoma", 0, 10));
        lblAantalReizigers.setText("lblAantalReizigers");
        add(lblAantalReizigers, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 90, -1, -1));
    }//GEN-END:initComponents
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblAantalReizigers;
    private javax.swing.JLabel lblAantalReizigersTitel;
    private javax.swing.JLabel lblActies;
    private javax.swing.JLabel lblGemiddeldeBezetting;
    private javax.swing.JLabel lblGemiddeldeWachtijd;
    private javax.swing.JLabel lblHuidigeStatistieken;
    private javax.swing.JLabel lblLangsteWachtijd;
    private javax.swing.JLabel lblMaximaleBezetting;
    private static javax.swing.JList lstActies;
    private static javax.swing.JScrollPane scrollpaneActies;
    // End of variables declaration//GEN-END:variables
    
    
    /**
    * Berekent en update de statistieken van het overzichtspaneel
    */
    public void updateStatistieken(){
        
        //Bereken De overall gemiddelde wachtijd
        int gemTimeStamp = 0;
        int actieveStations = 0;
        for( int i = 0; i < 8 ; i++) {
            String wachtTijd = (String) gui.GUIMain.pnlStation.tblStations.getValueAt(i, 2);
            int wachtTimestamp = 0;
            if(wachtTijd.compareTo("00:00:00") > 0 && wachtTijd.length() == 8){    
              wachtTimestamp = (((Integer.valueOf(wachtTijd.substring(0, 2)).intValue()) * 3600) + ((Integer.valueOf(wachtTijd.substring(3, 5))).intValue() * 60) + (Integer.valueOf(wachtTijd.substring(6, 8)).intValue()));
              actieveStations++;
            }
            else{
              continue;
            }
            gemTimeStamp = (((gemTimeStamp * (actieveStations-1)) + wachtTimestamp)/ actieveStations);
       }
        lblGemiddeldeWachtijd.setText(GUIMain.tijdNaarString(gemTimeStamp, false)[0]);
        
        //Bepaal de grootste wachtijd in het systeem
        int nieuwTimeStamp = 0, oudeTimeStamp = 0;
        for( int a = 0; a < 8 ; a++) {
            String wachtMaxTijd = (String) gui.GUIMain.pnlStation.tblStations.getValueAt(a, 3);
            
            if(wachtMaxTijd.compareTo("00:00:00") > 0 && wachtMaxTijd.length() == 8){    
              nieuwTimeStamp = (((Integer.valueOf(wachtMaxTijd.substring(0, 2)).intValue()) * 3600) + ((Integer.valueOf(wachtMaxTijd.substring(3, 5))).intValue() * 60) + (Integer.valueOf(wachtMaxTijd.substring(6, 8)).intValue()));
            }
            else{
              continue;
            }
            
            if(oudeTimeStamp < nieuwTimeStamp){
               oudeTimeStamp = nieuwTimeStamp; 
            }
            
             lblLangsteWachtijd.setText(GUIMain.tijdNaarString(oudeTimeStamp, false)[0]);
        }   
        
        
       //Bereken de gemiddelde en maximale treinbezetting
        int gemBezetting = 0;
        int bezettingHuidigeTrein = 0;
        int maxTreinBezetting = 0;
        for(int i = 0; i < gui.GUIMain.pnlTrein.getModel().getRowCount() ; i++) {
            bezettingHuidigeTrein = Integer.valueOf(gui.GUIMain.pnlTrein.tblTreinen.getValueAt(i, 1).toString()).intValue();
       
            if(bezettingHuidigeTrein > maxTreinBezetting){
                maxTreinBezetting = bezettingHuidigeTrein;
            }
            try{
                gemBezetting = (((gemBezetting * i) + bezettingHuidigeTrein)/ (i+1));
            }
            catch(Exception e){
                gemBezetting = 0;
            }
       }
        lblGemiddeldeBezetting.setText(Integer.toString(gemBezetting));
        lblMaximaleBezetting.setText(Integer.toString(gemBezetting));
        
        //Zet het aantal reizigers van het systeem in het label
        lblAantalReizigers.setText(Integer.toString(gui.GUIMain.pnlReiziger.tblReizigers.getRowCount()));
  
        
    }
}
